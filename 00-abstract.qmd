# Abstract {.unnumbered}

```{r, include = FALSE}

source("./R/libs.R")
source("./R/filter-id.R")
source("./R/figures-source.R")

# Settings for chunk options
knitr::opts_chunk$set(echo = FALSE, 
                      warning = FALSE, 
                      message = FALSE, 
                      dev = "cairo_pdf")

```



```{r abstract-data}

desc_dat <- final.data |>
  ungroup() |>
  right_join(ids) |>
  filter(test %in% c("max"),
         timepoint == "pre",
         period == 1) |>
  select(id,
         sex,
         vo2.kg) |> 
  group_by(sex) |>
  mutate(N = n()) |>
  summarise(n = mean(N, na.rm = T),
            m = mean(vo2.kg, na.rm = T),
            s = sd(vo2.kg, na.rm = T))


n.m <- paste0(sprintf("%.0f", desc_dat[2, 2])) 

n.f <- paste0(sprintf("%.0f", desc_dat[1, 2]))

vo2.m <- paste0(sprintf("%.1f", desc_dat[2, 3]))
vo2.m.sd <- paste0(sprintf("%.1f", desc_dat[2, 4]))

vo2.f <- paste0(sprintf("%.1f", desc_dat[1, 3]))
vo2.f.sd <- paste0(sprintf("%.1f", desc_dat[1, 4]))




#### SR Ca2+ Realease and Uptake ####

# load models
release_m2 <- readRDS("./data/derivedData/calcium_release/release_m2.RDS")
tau_m2 <- readRDS("./data/derivedData/calcium_uptake/tau_m2.RDS")
high_m2 <- readRDS("./data/derivedData/calcium_uptake/high_m2.RDS")
low_m2 <- readRDS( "./data/derivedData/calcium_uptake/low_m2.RDS")
leak_m2 <- readRDS("./data/derivedData/calcium_leak/leak_m2.RDS")

# load data
release_data <- readRDS("./data/derivedData/calcium_release/release_data.RDS")
tau_data <- readRDS("./data/derivedData/calcium_uptake/tau_data.RDS")
high_data <- readRDS("./data/derivedData/calcium_uptake/high_data.RDS")
low_data <- readRDS( "./data/derivedData/calcium_uptake/low_data.RDS")
leak_data <- readRDS("./data/derivedData/calcium_leak/leak_data.RDS")


leak_m1 <- readRDS("./data/derivedData/calcium_leak/leak_m1.RDS")
tau_m1 <- readRDS("./data/derivedData/calcium_uptake/tau_m1.RDS")
high_m1 <- readRDS("./data/derivedData/calcium_uptake/high_m1.RDS")
low_m1 <- readRDS( "./data/derivedData/calcium_uptake/low_m1.RDS")
release_m1 <- readRDS("./data/derivedData/calcium_release/release_m1.RDS")


# release
re_confint_m2 <- data.frame(confint(release_m2)) |>
  mutate(coef = c("",
                  "",
                  "",
                  "",
                  "intercept",
                  "change",
                  "sexf"))


release_m2_sum <- data.frame(summary(release_m2)$coef) |>
  mutate(coef = c("intercept",
                  "change",
                  "sexf")) |>
  left_join(re_confint_m2)


# uptake
up_confint_m2 <- data.frame(confint(tau_m2)) |>
  full_join(data.frame(confint(high_m2))) |>
  full_join(data.frame(confint(low_m2))) |>
  mutate(variable = c(rep("tau", 7),
                      rep("high", 7),
                      rep("low", 7)),
         coef = rep(c("",
                      "",
                      "",
                      "",
                      "intercept",
                      "change",
                      "sexf"),
                    3))


up_m2_sum <- data.frame(summary(tau_m2)$coef) |>
  full_join(data.frame(summary(high_m2)$coef)) |>
  full_join(data.frame(summary(low_m2)$coef)) |>
  mutate(variable = c(rep("tau", 3),
                      rep("high", 3),
                      rep("low", 3)),
         coef = rep(c("intercept",
                      "change",
                      "sexf"),
                    3)) |>
  left_join(up_confint_m2)



## save statistics

# release
re_m2_change <- paste0(sprintf("%.1f", (exp(release_m2_sum[2, 1]) - 1) * 100),
                       "% [",
                       sprintf("%.1f", (exp(release_m2_sum[2, 5]) - 1) * 100), 
                       ", ",
                       sprintf("%.1f", (exp(release_m2_sum[2, 6]) - 1) * 100),
                       "]")





# uptake
tau_m2_change <- paste0(sprintf("%.1f", (exp(up_m2_sum[2, 1]) - 1) * 100),
                        "% [",
                        sprintf("%.1f", (exp(up_m2_sum[2, 6]) - 1) * 100), 
                        ", ",
                        sprintf("%.1f", (exp(up_m2_sum[2, 7]) - 1) * 100),
                        "]")





# slope high
high_m2_change <- paste0(sprintf("%.1f", (exp(up_m2_sum[5, 1]) - 1) * 100),
                         "% [",
                         sprintf("%.1f", (exp(up_m2_sum[5, 6]) - 1) * 100), 
                         ", ",
                         sprintf("%.1f", (exp(up_m2_sum[5, 7]) - 1) * 100),
                         "]")





# release
re_confint_m1 <- data.frame(confint(release_m1)) |>
  mutate(coef = c("",
                  "",
                  "",
                  "",
                  "intercept",
                  "change",
                  "sexf",
                  "sexf:change"))


release_m1_sum <- data.frame(summary(release_m1)$coef) |>
  mutate(coef = c("intercept",
                  "change",
                  "sexf",
                  "sexf:change")) |>
  left_join(re_confint_m1)


# uptake

up_confint_m1 <- data.frame(confint(tau_m1)) |>
  full_join(data.frame(confint(high_m1))) |>
  full_join(data.frame(confint(low_m1))) |>
  mutate(variable = c(rep("tau", 8),
                      rep("high", 8),
                      rep("low", 8)),
         coef = rep(c("",
                      "",
                      "",
                      "",
                      "intercept",
                      "change",
                      "sexf",
                      "sexf:change"),
                    3))


up_m1_sum <- data.frame(summary(tau_m1)$coef) |>
  full_join(data.frame(summary(high_m1)$coef)) |>
  full_join(data.frame(summary(low_m1)$coef)) |>
  mutate(variable = c(rep("tau", 4),
                      rep("high", 4),
                      rep("low", 4)),
         coef = rep(c("intercept",
                      "change",
                      "sexf",
                      "sexf:change"),
                    3)) |>
  left_join(up_confint_m1)



#  save statitics


high_m1_sex <- paste0(sprintf("%.1f", (exp(up_m1_sum[7, 1]) - 1) * 100),
                      "% [",
                      sprintf("%.1f", (exp(up_m1_sum[7, 6]) - 1) * 100), 
                      ", ",
                      sprintf("%.1f", (exp(up_m1_sum[7, 7]) - 1) * 100),
                      "]")



high_m1_sex_change <- paste0(sprintf("%.1f", (exp(up_m1_sum[8, 1]) - 1) * 100),
                             "% [",
                             sprintf("%.1f", (exp(up_m1_sum[8, 6]) - 1) * 100), 
                             ", ",
                             sprintf("%.1f", (exp(up_m1_sum[8, 7]) - 1) * 100),
                             "]")




##### General Efficacy #########

max_vo2 <- readRDS("./data/derivedData/fitness/max_vo2.RDS")
max_watt <- readRDS("./data/derivedData/fitness/max_watt.RDS")
per_watt <- readRDS("./data/derivedData/fitness/per_watt.RDS")

general_confint <- data.frame(confint(max_vo2)) |>
  full_join(data.frame(confint(max_watt))) |>
  full_join(data.frame(confint(per_watt))) |> 
  mutate(variable = c(rep("vo2max", 4),
                      rep("wmax", 4),
                      rep("per", 4)),
         coef = rep(c("",
                      "",
                      "intercept",
                      "change"),
                    3))

general_data <- data.frame(summary(max_vo2)$coef) |>
  full_join(data.frame(summary(max_watt)$coef)) |>
  full_join(data.frame(summary(per_watt)$coef)) |> 
  mutate(variable = c(rep("vo2max", 2),
                      rep("wmax", 2),
                      rep("per", 2)),
         coef = rep(c("intercept",
                      "change"),
                    3)) |>
  left_join(general_confint) |>
  rename("lower.ci" = "X2.5..",
         "upper.ci" = "X97.5..")



# vo2max
vo2max_change <- paste0(sprintf("%.1f", general_data[2, 1] / general_data[1, 1] * 100),
                        "% [",
                        sprintf("%.1f", general_data[2, 6] / general_data[1, 6] * 100), 
                        ", ",
                        sprintf("%.1f", general_data[2, 7] / general_data[1, 7] * 100),
                        "]")





#wmax
wmax_change <- paste0(sprintf("%.1f", general_data[4, 1] / general_data[3, 1] * 100),
                      "% [",
                      sprintf("%.1f", general_data[4, 6] / general_data[3, 6] * 100), 
                      ", ",
                      sprintf("%.1f", general_data[4, 7] / general_data[3, 7] * 100),
                      "]")





# per
per_change <- paste0(sprintf("%.1f", general_data[6, 1] / general_data[5, 1] * 100),
                     "%, 95% confidence interval (CI): [",
                     sprintf("%.1f", general_data[6, 6] / general_data[5, 6] * 100), 
                     ", ",
                     sprintf("%.1f", general_data[6, 7] / general_data[5, 7] * 100),
                     "]")





###### SR in relation to performance ######

wmax_tau <- readRDS("./data/derivedData/SR-wmax/wmax_tau.RDS")
per_tau <- readRDS("./data/derivedData/SR-performance/per_tau.RDS")

per_low.pre <- readRDS("./data/derivedData/SR-performance/per_low.pre.RDS")
per_high.pre <- readRDS("./data/derivedData/SR-performance/per_high.pre.RDS")

vo2max_low.pre <- readRDS("./data/derivedData/SR-vo2max/vo2max_low.pre.RDS")
vo2max_high.pre <- readRDS("./data/derivedData/SR-vo2max/vo2max_high.pre.RDS")

wmax_high.pre <- readRDS("./data/derivedData/SR-wmax/wmax_high.pre.RDS")
wmax_low.pre <- readRDS("./data/derivedData/SR-wmax/wmax_low.pre.RDS")




per_confint <- data.frame(confint(per_tau)) |>
  full_join(data.frame(confint(wmax_tau))) |>
  mutate(variable = rep("tau", 8),
         coef = rep(c("intercept",
                      "change",
                      "pre_slope",
                      "sex"),
                    2),
         type = c(rep("per", 4),
                  rep("wmax", 4)))



per_adjusted <- data.frame(adj.r = summary(per_tau)$adj.r.squared) |>
  full_join(data.frame(adj.r = summary(wmax_tau)$adj.r.squared)) |>
  mutate(variable = c("tau", "tau"),
         type = c("per", "wmax"))



per_data <- data.frame(summary(per_tau)$coef) |>
  full_join(data.frame(summary(wmax_tau)$coef)) |>
  mutate(variable = rep("tau", 8),
         coef = rep(c("intercept",
                      "change",
                      "pre_slope",
                      "sex"), 2),
         type = c(rep("per", 4),
                  rep("wmax", 4))) |>
  filter(coef == "change") |>
  left_join(per_confint) |>
  left_join(per_adjusted)



tau_per <- paste0(sprintf("%.2f", per_data[1, 1]),
                         " watt [",
                         sprintf("%.2f", per_data[1, 8]), 
                         ", ",
                         sprintf("%.2f", per_data[1, 9]),
                  "]")

tau_wmax <- paste0(sprintf("%.2f", per_data[2, 1]),
                         " watt [",
                         sprintf("%.2f", per_data[2, 8]), 
                         ", ",
                         sprintf("%.2f", per_data[2, 9]),
                   "]")






pre_confint <- data.frame(confint(per_high.pre)) |>
  full_join(data.frame(confint(per_low.pre))) |>
  
  full_join(data.frame(confint(wmax_high.pre))) |>
  full_join(data.frame(confint(wmax_low.pre))) |>
  
  full_join(data.frame(confint(vo2max_high.pre))) |>
  full_join(data.frame(confint(vo2max_low.pre))) |>
  mutate(variable = rep(c(rep("high", 3),
                      rep("low", 3)),
                      3),
         coef = rep(rep(c("intercept",
                      "pre",
                      "sex"),
                    2), 3),
         type = c(rep("performance", 6),
                  rep("wmax", 6),
                  rep("vo2max", 6)))



pre_adjusted <- data.frame(adj.r = summary(per_high.pre)$adj.r.squared) |>
  full_join(data.frame(adj.r = summary(per_low.pre)$adj.r.squared)) |>
 
  full_join(data.frame(adj.r = summary(wmax_high.pre)$adj.r.squared)) |>
  full_join(data.frame(adj.r = summary(wmax_low.pre)$adj.r.squared)) |>
  
  full_join(data.frame(adj.r = summary(vo2max_high.pre)$adj.r.squared)) |>
  full_join(data.frame(adj.r = summary(vo2max_low.pre)$adj.r.squared)) |>
  
  mutate(variable = rep(c("high",
                      "low"),
                      3),
         type = c(rep("performance", 2),
                  rep("wmax", 2),
                  rep("vo2max", 2)))



pre_data <- data.frame(summary(per_high.pre)$coef) |>
  full_join(data.frame(summary(per_low.pre)$coef)) |>

  full_join(data.frame(summary(wmax_high.pre)$coef)) |>
  full_join(data.frame(summary(wmax_low.pre)$coef)) |>
 
  full_join(data.frame(summary(vo2max_high.pre)$coef)) |>
  full_join(data.frame(summary(vo2max_low.pre)$coef)) |>
  
  mutate(variable = rep(c(rep("high", 3),
                      rep("low", 3)),
                      3),
         coef = rep(rep(c("intercept",
                      "pre",
                      "sex"),
                    2), 3),
         type = c(rep("performance", 6),
                  rep("wmax", 6),
                  rep("vo2max", 6))) |>
  filter(coef == "pre") |>
  left_join(pre_confint) |>
  left_join(pre_adjusted)



high_per.pre <- paste0(sprintf("%.3f", pre_data[1, 1]),
                     " watt \U00B7 kg\U207B\U00B9 [",
                     sprintf("%.3f", pre_data[1, 8]),
                     ", ",
                     sprintf("%.3f", pre_data[1, 9]),
                     "]")

low_per.pre <- paste0(sprintf("%.3f", pre_data[2, 1]),
                     " watt \U00B7 kg\U207B\U00B9 [",
                     sprintf("%.3f", pre_data[2, 8]),
                     ", ",
                     sprintf("%.3f", pre_data[2, 9]),
                     "]")

high_wmax.pre <- paste0(sprintf("%.3f", pre_data[3, 1]),
                     " watt \U00B7 kg\U207B\U00B9 [",
                     sprintf("%.3f", pre_data[3, 8]),
                     ", ",
                     sprintf("%.3f", pre_data[3, 9]),
                     "]")

low_wmax.pre <- paste0(sprintf("%.3f", pre_data[4, 1]),
                     " watt \U00B7 kg\U207B\U00B9 [",
                     sprintf("%.3f", pre_data[4, 8]),
                     ", ",
                     sprintf("%.3f", pre_data[4, 9]),
                     "]")

high_vo2max.pre <- paste0(sprintf("%.2f", pre_data[5, 1]),
                     " mL \U00B7 kg\U207B\U00B9 \U00B7 min\U207B\U00B9 [",
                     sprintf("%.2f", pre_data[5, 8]),
                     ", ",
                     sprintf("%.2f", pre_data[5, 9]),
                     "]")

low_vo2max.pre <- paste0(sprintf("%.2f", pre_data[6, 1]),
                     " mL \U00B7 kg\U207B\U00B9 \U00B7 min\U207B\U00B9 [",
                     sprintf("%.2f", pre_data[6, 8]),
                     ", ",
                     sprintf("%.2f", pre_data[6, 9]),
                     "]")

```

**Background**: Little is presently known about the effects of endurance training on release and uptake of calcium ions (Ca^2+^) by the sarcoplasmic reticulum (SR) and the implications of such characteristics for muscular function and performance. Thus, the present study aimed to characterize this regulation in untrained men and woman following a period of endurance training and examine how the possible changes corresponds with changes in endurance performance.

**Methods**: Release and uptake by SR vesicles isolated from resting *m. vastus lateralis* muscle biopsies and endurance performance were determined before and after a period of eight weeks with moderate and high-intensity endurance training in sixteen females (`r vo2.f` $\pm$ `r vo2.f.sd` mL O~2~ $\cdot$ kg^-1^ $\cdot$ min^-1^) and twenty-one males (`r vo2.m` $\pm$ `r vo2.m.sd` mL O~2~ $\cdot$ kg^-1^ $\cdot$ min^-1^).

**Results**: Training led to improved 15-min endurance performance (`r per_change`; W~15min~) with concomitant increases in SR Ca^2+^ release rate (`r re_m2_change`) and SR Ca^2+^ uptake (`r tau_m2_change`). SR Ca^2+^ uptake was negatively associated with changes in W~15min~ (`r tau_per` per %-point increase in uptake), and SR Ca^2+^ release was not associated with W~15min~. SR Ca^2+^ release did not differ between sexes, however, females displayed `r high_m1_sex` lower SR Ca^2+^ uptake at baseline, yet, increased `r high_m1_sex_change` more after training. 

**Conclusion**: The rate of SR Ca^2+^ release and uptake can be enhanced by eight weeks of endurance training in sedentary adults, which may have important implications for muscular performance and general health. Moreover, SR Ca^2+^ release does in general not differ between sexes, with the exception of females displaying lower rates of SR Ca^2+^ uptake prior to training, yet larger gains in response to training.    

\tableofcontents